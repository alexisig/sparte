# Generated by Django 4.2.10 on 2024-02-29 14:43

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AdminTerritory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("REGION", "Région"),
                            ("DEPART", "Département"),
                            ("EPCI", "EPCI"),
                            ("COMM", "Commune"),
                            ("SCOT", "SCoT"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Catégorie",
                    ),
                ),
                ("official_id", models.CharField(db_index=True, max_length=50, verbose_name="Identifiant officiel")),
                ("name", models.CharField(db_index=True, max_length=150, verbose_name="Nom")),
                ("mpoly", django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                (
                    "srid_source",
                    models.IntegerField(
                        choices=[
                            (2154, "France Métropolitaine et Corse"),
                            (32620, "Guadeloupe et Martinique"),
                            (2972, "Guyane Française"),
                            (2975, "La réunion"),
                            (4326, "Monde (GPS)"),
                            (3857, "Monde (Google Maps, OpenStreetMap etc.)"),
                        ],
                        default=2154,
                        verbose_name="SRID",
                    ),
                ),
                (
                    "area",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True, verbose_name="Surface"
                    ),
                ),
                (
                    "surface_artif",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True, verbose_name="Surface artificielle"
                    ),
                ),
                (
                    "parents",
                    models.ManyToManyField(blank=True, related_name="children", to="admin_express.adminterritory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Commune",
            fields=[
                (
                    "adminterritory_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin_express.adminterritory",
                    ),
                ),
                ("ocsge_available", models.BooleanField(default=False, verbose_name="Statut de couverture OCSGE")),
                (
                    "first_millesime",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(2000),
                            django.core.validators.MaxValueValidator(2050),
                        ],
                        verbose_name="Premier millésime disponible",
                    ),
                ),
                (
                    "last_millesime",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(2000),
                            django.core.validators.MaxValueValidator(2050),
                        ],
                        verbose_name="Dernier millésime disponible",
                    ),
                ),
            ],
            bases=("admin_express.adminterritory",),
        ),
        migrations.CreateModel(
            name="Departement",
            fields=[
                (
                    "adminterritory_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin_express.adminterritory",
                    ),
                ),
                ("is_artif_ready", models.BooleanField(default=False, verbose_name="Données artif disponibles")),
                (
                    "ocsge_millesimes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), blank=True, null=True, size=None
                    ),
                ),
            ],
            bases=("admin_express.adminterritory",),
        ),
        migrations.CreateModel(
            name="Epci",
            fields=[
                (
                    "adminterritory_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin_express.adminterritory",
                    ),
                ),
            ],
            bases=("admin_express.adminterritory",),
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "adminterritory_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin_express.adminterritory",
                    ),
                ),
            ],
            bases=("admin_express.adminterritory",),
        ),
        migrations.CreateModel(
            name="Scot",
            fields=[
                (
                    "adminterritory_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin_express.adminterritory",
                    ),
                ),
            ],
            bases=("admin_express.adminterritory",),
        ),
    ]
